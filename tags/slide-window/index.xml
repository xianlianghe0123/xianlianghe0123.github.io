<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>slide window on 贺贤良</title>
    <link>https://xianlianghe0123.github.io/tags/slide-window/</link>
    <description>Recent content in slide window on 贺贤良</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn-zh</language>
    <lastBuildDate>Wed, 19 Jan 2022 09:31:46 +0800</lastBuildDate><atom:link href="https://xianlianghe0123.github.io/tags/slide-window/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode 219. 存在重复元素 II</title>
      <link>https://xianlianghe0123.github.io/p/leetcode-219.-%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0-ii/</link>
      <pubDate>Wed, 19 Jan 2022 09:31:46 +0800</pubDate>
      
      <guid>https://xianlianghe0123.github.io/p/leetcode-219.-%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0-ii/</guid>
      <description>链接： https://leetcode-cn.com/problems/design-add-and-search-words-data-structure/
难度： 中等
题目描述 给你一个整数数组 nums 和一个整数 k ，判断数组中是否存在两个 不同的索引 i 和 j ，满足 nums[i] == nums[j] 且 abs(i - j) &amp;lt;= k 。如果存在，返回 true ；否则，返回 false 。
示例 1： 输入：nums = [1,2,3,1], k = 3 输出：true
示例 2： 输入：nums = [1,0,1,1], k = 1 输出：true
示例 3： 输入：nums = [1,2,3,1,2,3], k = 2 输出：false
提示：  1 &amp;lt;= nums.length &amp;lt;= 105 -109 &amp;lt;= nums[i] &amp;lt;= 109 0 &amp;lt;= k &amp;lt;= 105  解题思路 暴力求解 对于每个 i，枚举满足 abs(i - j) &amp;lt;= k 的所有 j，判断是否存在与 nums[i] 相等的数。</description>
    </item>
    
    <item>
      <title>Leetcode 438. 找到字符串中所有字母异位词</title>
      <link>https://xianlianghe0123.github.io/p/leetcode-438.-%E6%89%BE%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%89%80%E6%9C%89%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/</link>
      <pubDate>Sun, 28 Nov 2021 10:03:54 +0800</pubDate>
      
      <guid>https://xianlianghe0123.github.io/p/leetcode-438.-%E6%89%BE%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%89%80%E6%9C%89%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/</guid>
      <description>链接： https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/
难度： 中等
题目描述 给定两个字符串 s 和 p，找到 s 中所有 p 的 异位词 的子串，返回这些子串的起始索引。不考虑答案输出的顺序。
异位词 指由相同字母重排列形成的字符串（包括相同的字符串）。
示例 1：  输入： s = &amp;ldquo;cbaebabacd&amp;rdquo;, p = &amp;ldquo;abc&amp;rdquo;
输出： [0,6]
解释：
起始索引等于 0 的子串是 &amp;ldquo;cba&amp;rdquo;, 它是 &amp;ldquo;abc&amp;rdquo; 的异位词。
起始索引等于 6 的子串是 &amp;ldquo;bac&amp;rdquo;, 它是 &amp;ldquo;abc&amp;rdquo; 的异位词。
 示例 2：  输入： s = &amp;ldquo;abab&amp;rdquo;, p = &amp;ldquo;ab&amp;rdquo;
输出： [0,1,2]
解释：
起始索引等于 0 的子串是 &amp;ldquo;ab&amp;rdquo;, 它是 &amp;ldquo;ab&amp;rdquo; 的异位词。
起始索引等于 1 的子串是 &amp;ldquo;ba&amp;rdquo;, 它是 &amp;ldquo;ab&amp;rdquo; 的异位词。</description>
    </item>
    
    <item>
      <title>Leetcode 594. 最长和谐子序列</title>
      <link>https://xianlianghe0123.github.io/p/leetcode-594.-%E6%9C%80%E9%95%BF%E5%92%8C%E8%B0%90%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sat, 20 Nov 2021 23:59:35 +0800</pubDate>
      
      <guid>https://xianlianghe0123.github.io/p/leetcode-594.-%E6%9C%80%E9%95%BF%E5%92%8C%E8%B0%90%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>链接： https://leetcode-cn.com/problems/longest-harmonious-subsequence/
难度： 简单
题目描述 和谐数组是指一个数组里元素的最大值和最小值之间的差别 正好是 1 。
现在，给你一个整数数组 nums ，请你在所有可能的子序列中找到最长的和谐子序列的长度。
数组的子序列是一个由数组派生出来的序列，它可以通过删除一些元素或不删除元素、且不改变其余元素的顺序而得到。
示例 1：  输入： nums = [1,3,2,2,5,2,3,7]
输出： 5
解释： 最长的和谐子序列是 [3,2,2,2,3]
 示例 2：  输入： nums = [1,2,3,4]
输出： 2
 示例 3：  输入： nums = [1,1,1,1]
输出： 0
 提示：  1 &amp;lt;= nums.length &amp;lt;= 2 * 104 -109 &amp;lt;= nums[i] &amp;lt;= 109  解题思路 排序 + 滑动窗口 将整个数组排序，两段相邻的元素相同的子数组，并且差值为 1 时，在原数组中可以构成和谐数组，记录最大值。
func findLHS(nums []int) int { sort.</description>
    </item>
    
    <item>
      <title>Leetcode 1838. 最高频元素的频数</title>
      <link>https://xianlianghe0123.github.io/p/leetcode-1838.-%E6%9C%80%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0%E7%9A%84%E9%A2%91%E6%95%B0/</link>
      <pubDate>Mon, 19 Jul 2021 10:31:28 +0800</pubDate>
      
      <guid>https://xianlianghe0123.github.io/p/leetcode-1838.-%E6%9C%80%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0%E7%9A%84%E9%A2%91%E6%95%B0/</guid>
      <description>链接： https://leetcode-cn.com/problems/frequency-of-the-most-frequent-element/
难度： 中等
题目描述 元素的 频数 是该元素在一个数组中出现的次数。
给你一个整数数组 nums 和一个整数 k 。在一步操作中，你可以选择 nums 的一个下标，并将该下标对应元素的值增加 1 。
执行最多 k 次操作后，返回数组中最高频元素的 最大可能频数 。
示例 1：  输入： nums = [1,2,4], k = 5
输出： 3
解释： 对第一个元素执行 3 次递增操作，对第二个元素执 2 次递增操作，此时 nums = [4,4,4] 。
4 是数组中最高频元素，频数是 3 。
 示例 2：  输入： nums = [1,4,8,13], k = 5
输出： 2
解释： 存在多种最优解决方案：
 对第一个元素执行 3 次递增操作，此时 nums = [4,4,8,13] 。4 是数组中最高频元素，频数是 2 。 对第二个元素执行 4 次递增操作，此时 nums = [1,8,8,13] 。8 是数组中最高频元素，频数是 2 。 对第三个元素执行 5 次递增操作，此时 nums = [1,4,13,13] 。13 是数组中最高频元素，频数是 2 。   示例 3：  输入： nums = [3,9,6], k = 2</description>
    </item>
    
  </channel>
</rss>
