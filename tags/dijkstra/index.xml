<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dijkstra on 贺贤良</title>
    <link>https://xianlianghe0123.github.io/tags/dijkstra/</link>
    <description>Recent content in Dijkstra on 贺贤良</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn-zh</language>
    <lastBuildDate>Thu, 13 Jan 2022 10:11:31 +0800</lastBuildDate><atom:link href="https://xianlianghe0123.github.io/tags/dijkstra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode 747. 至少是其他数字两倍的最大数</title>
      <link>https://xianlianghe0123.github.io/p/leetcode-747.-%E8%87%B3%E5%B0%91%E6%98%AF%E5%85%B6%E4%BB%96%E6%95%B0%E5%AD%97%E4%B8%A4%E5%80%8D%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0/</link>
      <pubDate>Thu, 13 Jan 2022 10:11:31 +0800</pubDate>
      
      <guid>https://xianlianghe0123.github.io/p/leetcode-747.-%E8%87%B3%E5%B0%91%E6%98%AF%E5%85%B6%E4%BB%96%E6%95%B0%E5%AD%97%E4%B8%A4%E5%80%8D%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0/</guid>
      <description>链接： https://leetcode-cn.com/problems/largest-number-at-least-twice-of-others/
难度： 简单
题目描述 给你一个整数数组 nums ，其中总是存在 唯一的 一个最大整数 。
请你找出数组中的最大元素并检查它是否 至少是数组中每个其他数字的两倍 。如果是，则返回 最大元素的下标 ，否则返回 -1 。
示例 1： 输入： nums = [3,6,1,0]
输出： 1
解释： 6 是最大的整数，对于数组中的其他整数，6 大于数组中其他元素的两倍。6 的下标是 1 ，所以返回 1 。
示例 2： 输入： nums = [1,2,3,4]
输出： -1
解释： 4 没有超过 3 的两倍大，所以返回 -1 。
示例 3： 输入： nums = [1]
输出： 0
解释： 因为不存在其他数字，所以认为现有数字 1 至少是其他数字的两倍。
提示： 1 &amp;lt;= nums.length &amp;lt;= 50 0 &amp;lt;= nums[i] &amp;lt;= 100 nums 中的最大元素是唯一的 解题思路 模拟 首先完成一遍遍历找出最大的数字，然后再次遍历判定其是否为其他数字的两倍。</description>
    </item>
    
    <item>
      <title>Leetcode 743. 网络延迟时间</title>
      <link>https://xianlianghe0123.github.io/p/leetcode-743.-%E7%BD%91%E7%BB%9C%E5%BB%B6%E8%BF%9F%E6%97%B6%E9%97%B4/</link>
      <pubDate>Tue, 03 Aug 2021 20:16:01 +0800</pubDate>
      
      <guid>https://xianlianghe0123.github.io/p/leetcode-743.-%E7%BD%91%E7%BB%9C%E5%BB%B6%E8%BF%9F%E6%97%B6%E9%97%B4/</guid>
      <description>链接： https://leetcode-cn.com/problems/network-delay-time/
难度： 中等
题目描述 有 n 个网络节点，标记为 1 到 n 。
给你一个列表 times，表示信号经过 有向 边的传递时间。 times[i] = (ui, vi, wi)，其中 ui 是源节点，vi 是目标节点， wi 是一个信号从源节点传递到目标节点的时间。
现在，从某个节点 K 发出一个信号。需要多久才能使所有节点都收到信号？如果不能使所有节点收到信号，返回 -1 。
示例 1： 输入： times = [[2,1,1],[2,3,1],[3,4,1]], n = 4, k = 2
输出： 2
示例 2： 输入： times = [[1,2,1]], n = 2, k = 1
输出： 1
示例 3： 输入： times = [[1,2,1]], n = 2, k = 2</description>
    </item>
    
  </channel>
</rss>
